---
title: "Normalizing your data"
format: html
---

# Introduction

This Quarto notebook demonstrates basic unsupervised machine learning concepts using Python.

## Learning Objectives

- Understand the difference between supervised and unsupervised learning.
- Apply PCA and clustering to example data.
- Visualize results with matplotlib.

## Setup

```{python}
#| echo: true
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
```

## Example Data

```{python}
#| echo: true
# Generate synthetic data
np.random.seed(42)
X = np.vstack([
    np.random.normal(loc=[0, 0], scale=1, size=(50, 2)),
    np.random.normal(loc=[5, 5], scale=1, size=(50, 2))
])
plt.scatter(X[:, 0], X[:, 1])
plt.title("Synthetic Data")
plt.show()
```

## PCA Example

```{python}
#| echo: true
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X)
plt.scatter(X_pca[:, 0], X_pca[:, 1])
plt.title("PCA Projection")
plt.show()
```

## Clustering Example

```{python}
#| echo: true
kmeans = KMeans(n_clusters=2, random_state=42)
labels = kmeans.fit_predict(X)
plt.scatter(X[:, 0], X[:, 1], c=labels)
plt.title("KMeans Clustering")
plt.show()
```

## Conclusion

- PCA reduces dimensionality for visualization.
- KMeans finds clusters in unlabeled data.

---

*Edit this template to add your own data